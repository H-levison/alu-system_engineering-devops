#!/usr/bin/env bash
# Ensure the script runs as root
if [ "$(id -u)" -ne 0 ]; then
    echo "This script must be run as root!"
    exit 1
fi

# Ensure nginx user exists
if ! id -u nginx >/dev/null 2>&1; then
    useradd -r -d /var/www -s /sbin/nologin nginx
fi

# Define Nginx config paths
NGINX_CONF="/etc/nginx/nginx.conf"
NGINX_DEFAULT="/etc/nginx/sites-available/default"

# Ensure Nginx configuration exists
if [ ! -f "$NGINX_CONF" ]; then
    echo "Error: Nginx configuration file not found!"
    exit 1
fi

# Modify Nginx to run as nginx user
sed -i 's/^user .*/user nginx;/' "$NGINX_CONF"

# Update server block to listen on port 8080
if [ -f "$NGINX_DEFAULT" ]; then
    sed -i 's/listen 80;/listen 8080;/g' "$NGINX_DEFAULT"
    sed -i 's/listen \[::\]:80;/listen \[::\]:8080;/g' "$NGINX_DEFAULT"
else
    echo "Warning: Default site config not found, checking nginx.conf"
    sed -i 's/listen 80;/listen 8080;/g' "$NGINX_CONF"
    sed -i 's/listen \[::\]:80;/listen \[::\]:8080;/g' "$NGINX_CONF"
fi

# Restart Nginx to apply changes
systemctl restart nginx

# Check if Nginx restarted successfully
if systemctl is-active --quiet nginx; then
    echo "Nginx restarted successfully."
else
    echo "Error: Nginx failed to restart. Check logs."
    systemctl status nginx
    exit 1
fi

# Verify Nginx is running as the nginx user
if pgrep -a nginx | grep -q "nginx: worker"; then
    echo "Nginx is running as the nginx user."
else
    echo "Error: Nginx is not running as nginx user!"
    pgrep -u nginx nginx
    exit 1
fi

# Confirm port 8080 is active
if netstat -tulnp | grep ':8080' || ss -tulnp | grep ':8080'; then
    echo "Nginx is listening on port 8080."
else
    echo "Error: Nginx is NOT listening on port 8080!"
    exit 1
    fi
